diff -urNp coreutils-8.4-orig/src/fs-is-local.h coreutils-8.4/src/fs-is-local.h
--- coreutils-8.4-orig/src/fs-is-local.h	2016-01-04 14:50:42.811228803 +0100
+++ coreutils-8.4/src/fs-is-local.h	2016-01-04 15:18:47.513402199 +0100
@@ -6,6 +6,7 @@ is_local_fs_type (unsigned long int magi
 {
   switch (magic)
     {
+      case S_MAGIC_ACFS: return 0;
       case S_MAGIC_ADFS: return 1;
       case S_MAGIC_AFFS: return 1;
       case S_MAGIC_AFS: return 0;
@@ -14,24 +15,30 @@ is_local_fs_type (unsigned long int magi
       case S_MAGIC_AUTOFS: return 1;
       case S_MAGIC_BEFS: return 1;
       case S_MAGIC_BDEVFS: return 1;
+      case S_MAGIC_BPF_FS: return 1;
       case S_MAGIC_BFS: return 1;
       case S_MAGIC_BINFMTFS: return 1;
       case S_MAGIC_BTRFS: return 1;
+      case S_MAGIC_BTRFS_TEST: return 1;
       case S_MAGIC_CEPH: return 0;
       case S_MAGIC_CGROUP: return 1;
       case S_MAGIC_CIFS: return 0;
       case S_MAGIC_CODA: return 0;
       case S_MAGIC_COH: return 1;
+      case S_MAGIC_CONFIGFS: return 1;
       case S_MAGIC_CRAMFS: return 1;
       case S_MAGIC_CRAMFS_WEND: return 1;
       case S_MAGIC_DEBUGFS: return 1;
       case S_MAGIC_DEVFS: return 1;
       case S_MAGIC_DEVPTS: return 1;
+      case S_MAGIC_EFIVARFS: return 1;
       case S_MAGIC_ECRYPTFS: return 1;
       case S_MAGIC_EFS: return 1;
+      case S_MAGIC_EXOFS: return 1;
       case S_MAGIC_EXT: return 1;
       case S_MAGIC_EXT2: return 1;
       case S_MAGIC_EXT2_OLD: return 1;
+      case S_MAGIC_F2FS: return 1;
       case S_MAGIC_FAT: return 1;
       case S_MAGIC_FHGFS: return 0;
       case S_MAGIC_FUSEBLK: return 0;
@@ -40,9 +47,13 @@ is_local_fs_type (unsigned long int magi
       case S_MAGIC_GFS: return 0;
       case S_MAGIC_GPFS: return 0;
       case S_MAGIC_HFS: return 1;
+      case S_MAGIC_HFS_PLUS: return 1;
+      case S_MAGIC_HFS_X: return 1;
+      case S_MAGIC_HOSTFS: return 1;
       case S_MAGIC_HPFS: return 1;
       case S_MAGIC_HUGETLBFS: return 1;
       case S_MAGIC_MTD_INODE_FS: return 1;
+      case S_MAGIC_IBRIX: return 0;
       case S_MAGIC_INOTIFYFS: return 1;
       case S_MAGIC_ISOFS: return 1;
       case S_MAGIC_ISOFS_R_WIN: return 1;
@@ -51,6 +62,7 @@ is_local_fs_type (unsigned long int magi
       case S_MAGIC_JFFS2: return 1;
       case S_MAGIC_JFS: return 1;
       case S_MAGIC_KAFS: return 0;
+      case S_MAGIC_LOGFS: return 1;
       case S_MAGIC_LUSTRE: return 0;
       case S_MAGIC_MINIX: return 1;
       case S_MAGIC_MINIX_30: return 1;
@@ -63,9 +75,11 @@ is_local_fs_type (unsigned long int magi
       case S_MAGIC_NFS: return 0;
       case S_MAGIC_NFSD: return 0;
       case S_MAGIC_NILFS: return 1;
+      case S_MAGIC_NSFS: return 1;
       case S_MAGIC_NTFS: return 1;
       case S_MAGIC_OPENPROM: return 1;
       case S_MAGIC_OCFS2: return 0;
+      case S_MAGIC_OVERLAYFS: return 0;
       case S_MAGIC_PANFS: return 0;
       case S_MAGIC_PIPEFS: return 0;
       case S_MAGIC_PROC: return 1;
@@ -78,13 +92,17 @@ is_local_fs_type (unsigned long int magi
       case S_MAGIC_RPC_PIPEFS: return 1;
       case S_MAGIC_SECURITYFS: return 1;
       case S_MAGIC_SELINUX: return 1;
+      case S_MAGIC_SMACK: return 1;
       case S_MAGIC_SMB: return 0;
+      case S_MAGIC_SNFS: return 0;
       case S_MAGIC_SOCKFS: return 1;
       case S_MAGIC_SQUASHFS: return 1;
       case S_MAGIC_SYSFS: return 1;
       case S_MAGIC_SYSV2: return 1;
       case S_MAGIC_SYSV4: return 1;
       case S_MAGIC_TMPFS: return 1;
+      case S_MAGIC_TRACEFS: return 1;
+      case S_MAGIC_UBIFS: return 1;
       case S_MAGIC_UDF: return 1;
       case S_MAGIC_UFS: return 1;
       case S_MAGIC_UFS_BYTESWAPPED: return 1;
diff -urNp coreutils-8.4-orig/src/stat.c coreutils-8.4/src/stat.c
--- coreutils-8.4-orig/src/stat.c	2016-01-04 14:50:42.825228927 +0100
+++ coreutils-8.4/src/stat.c	2016-01-04 14:58:58.899431967 +0100
@@ -216,6 +216,8 @@ human_fstype (STRUCT_STATVFS const *stat
          a comment.  The S_MAGIC_... name and constant are automatically
          combined to produce the #define directives in fs.h.  */
 
+    case S_MAGIC_ACFS: /* 0x61636673 */
+      return "acfs";
     case S_MAGIC_ADFS: /* 0xADF5 */
       return "adfs";
     case S_MAGIC_AFFS: /* 0xADFF */
@@ -235,12 +237,16 @@ human_fstype (STRUCT_STATVFS const *stat
       return "befs";
     case S_MAGIC_BDEVFS: /* 0x62646576 */
       return "bdevfs";
+    case S_MAGIC_BPF_FS: /* 0xCAFE4A11 */
+      return "bpf_fs";
     case S_MAGIC_BFS: /* 0x1BADFACE */
       return "bfs";
     case S_MAGIC_BINFMTFS: /* 0x42494E4D */
       return "binfmt_misc";
     case S_MAGIC_BTRFS: /* 0x9123683E */
       return "btrfs";
+    case S_MAGIC_BTRFS_TEST: /* 0x73727279 */
+      return "btrfs_test";
     case S_MAGIC_CEPH: /* 0x00C36400 */
       return "ceph";
     case S_MAGIC_CGROUP: /* 0x0027E0EB */
@@ -251,6 +257,8 @@ human_fstype (STRUCT_STATVFS const *stat
       return "coda";
     case S_MAGIC_COH: /* 0x012FF7B7 */
       return "coh";
+    case S_MAGIC_CONFIGFS: /* 0x62656570 */
+      return "configfs";
     case S_MAGIC_CRAMFS: /* 0x28CD3D45 */
       return "cramfs";
     case S_MAGIC_CRAMFS_WEND: /* 0x453DCD28 */
@@ -263,14 +271,20 @@ human_fstype (STRUCT_STATVFS const *stat
       return "devpts";
     case S_MAGIC_ECRYPTFS: /* 0xF15F */
       return "ecryptfs";
+    case S_MAGIC_EFIVARFS: /* 0xDE5E81E4 */
+     return "efivarfs";
     case S_MAGIC_EFS: /* 0x00414A53 */
       return "efs";
+    case S_MAGIC_EXOFS: /* 0x5DF5 */
+      return "exofs";
     case S_MAGIC_EXT: /* 0x137D */
       return "ext";
     case S_MAGIC_EXT2: /* 0xEF53 */
       return "ext2/ext3";
     case S_MAGIC_EXT2_OLD: /* 0xEF51 */
       return "ext2";
+    case S_MAGIC_F2FS: /* 0xF2F52010 */
+      return "f2fs";
     case S_MAGIC_FAT: /* 0x4006 */
       return "fat";
     case S_MAGIC_FHGFS: /* 0x19830326 */
@@ -287,12 +301,20 @@ human_fstype (STRUCT_STATVFS const *stat
       return "gpfs";
     case S_MAGIC_HFS: /* 0x4244 */
       return "hfs";
+    case S_MAGIC_HFS_PLUS: /* 0x482B */
+      return "hfs+";
+    case S_MAGIC_HFS_X: /* 0x4858 */
+      return "hfsx";
+    case S_MAGIC_HOSTFS: /* 0x00C0FFEE */
+      return "hostfs";
     case S_MAGIC_HPFS: /* 0xF995E849 */
       return "hpfs";
     case S_MAGIC_HUGETLBFS: /* 0x958458F6 */
       return "hugetlbfs";
     case S_MAGIC_MTD_INODE_FS: /* 0x11307854 */
       return "inodefs";
+    case S_MAGIC_IBRIX: /* 0x013111A8 */
+      return "ibrix";
     case S_MAGIC_INOTIFYFS: /* 0x2BAD1DEA */
       return "inotifyfs";
     case S_MAGIC_ISOFS: /* 0x9660 */
@@ -309,6 +331,8 @@ human_fstype (STRUCT_STATVFS const *stat
       return "jfs";
     case S_MAGIC_KAFS: /* 0x6B414653 */
       return "k-afs";
+    case S_MAGIC_LOGFS: /* 0xC97E8168 */
+      return "logfs";
     case S_MAGIC_LUSTRE: /* 0x0BD00BD0 */
       return "lustre";
     case S_MAGIC_MINIX: /* 0x137F */
@@ -333,12 +357,16 @@ human_fstype (STRUCT_STATVFS const *stat
       return "nfsd";
     case S_MAGIC_NILFS: /* 0x3434 */
       return "nilfs";
+    case S_MAGIC_NSFS: /* 0x6E736673 */
+      return "nsfs";
     case S_MAGIC_NTFS: /* 0x5346544E */
       return "ntfs";
     case S_MAGIC_OPENPROM: /* 0x9FA1 */
       return "openprom";
     case S_MAGIC_OCFS2: /* 0x7461636f */
       return "ocfs2";
+    case S_MAGIC_OVERLAYFS: /* 0x794C7630 */
+      return "overlayfs";
     case S_MAGIC_PANFS: /* 0xAAD7AAEA */
       return "panfs";
     case S_MAGIC_PIPEFS: /* 0x50495045 */
@@ -366,8 +394,12 @@ human_fstype (STRUCT_STATVFS const *stat
       return "securityfs";
     case S_MAGIC_SELINUX: /* 0xF97CFF8C */
       return "selinux";
+    case S_MAGIC_SMACK: /* 0x43415D53 */
+      return "smackfs";
     case S_MAGIC_SMB: /* 0x517B */
       return "smb";
+    case S_MAGIC_SNFS: /* 0xBEEFDEAD */
+      return "snfs";
     case S_MAGIC_SOCKFS: /* 0x534F434B */
       return "sockfs";
     case S_MAGIC_SQUASHFS: /* 0x73717368 */
@@ -380,6 +412,10 @@ human_fstype (STRUCT_STATVFS const *stat
       return "sysv4";
     case S_MAGIC_TMPFS: /* 0x01021994 */
       return "tmpfs";
+    case S_MAGIC_TRACEFS: /* 0x74726163 */
+      return "tracefs";
+    case S_MAGIC_UBIFS: /* 0x24051905 */
+      return "ubifs";
     case S_MAGIC_UDF: /* 0x15013346 */
       return "udf";
     case S_MAGIC_UFS: /* 0x00011954 */
